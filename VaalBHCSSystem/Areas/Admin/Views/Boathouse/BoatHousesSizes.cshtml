@model IEnumerable<BoatHouseSizeViewModel>

@{
    ViewData["Title"] = "BoatHousesSizes";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Boat Houses</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Dashboard")">Home</a>
            </li>

            <li class="active breadcrumb-item">
                <strong>All Boat Houses</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>List of all available sizes.</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>

                    </div>
                </div>
                <div class="ibox-content">
                    <button type="button" data-toggle="modal" data-target="#AddSizeModal" onclick="IntiNewSize();" class="btn btn-primary block m-b"><i class="fa fa-plus"></i> &nbsp; Add New</button>
                    <hr />
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover dataTables-BoatHouseSizes">
                            <thead>
                                <tr>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Description)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.aCost)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.aHieght)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.aLength)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.aWidth)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>

                                        <td>

                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>

                                            @Html.DisplayFor(modelItem => item.aCost)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.aHieght)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.aLength)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.aWidth)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "EditBoatHouseSize", "Boathouse", new { BoatHouseID = item.Id }) |
                                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal inmodal" id="AddSizeModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">

        <div class="modal-content animated flipInY">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>

                <h4 class="modal-title">Add Boat House Size</h4>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-3"></div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Description</label>
                            <input id="txtAddDescription" class="form-control" type="text" value="0" name="txtAddDescription">
                        </div>
                        <div class="col-lg-3"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3"></div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Length</label>
                            <input id="txtAddLength" type="text" value="0" name="txtAddLength">
                        </div>
                        <div class="col-lg-3"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3"></div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Width</label>
                            <input id="txtAddWidth" type="text" value="0" name="txtAddWidth">

                        </div>
                        <div class="col-lg-3"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3"></div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Hieght</label>
                            <input id="txtAddHieght" type="text" value="0" name="txtAddHieght">

                        </div>
                        <div class="col-lg-3"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3"></div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Cost</label>
                            <input id="txtAddCost" type="text" value="0" name="txtAddCost">

                        </div>
                        <div class="col-lg-3"></div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" onclick="alert($('#txtAddLength').val());">Cancel</button>
                <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                <button type="button" onclick="AddNewBoatHouseSize();" class="btn btn-primary">Add Size</button>
            </div>
        </div>
    </div>
</div>
@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.css" />
        <link rel="stylesheet" href="~/lib/toastr/toastr.min.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/dataTables/dataTables.bootstrap4.min.js"></script>
        <script src="~/lib/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.js"></script>
        <script src="~/lib/toastr/toastr.min.js"></script>
    </environment>

    <script type="text/javascript">
        var _ViewModel;

        function IntiNewSize() {
            $("#txtAddCost").val('0.0');
            $("#txtAddHieght").val('0.0');
            $("#txtAddWidth").val('0.0');
            $("#txtAddLength").val('0.0');
        }

        function AddNewBoatHouseSize() {
                _ViewModel = JSON.parse('{}');
            _ViewModel.Id = 0;
            _ViewModel.Description = $("#txtAddDescription").val();
                _ViewModel.Cost = $("#txtAddCost").val();
                _ViewModel.Hieght = $("#txtAddHieght").val();
                _ViewModel.Width = $("#txtAddWidth").val();
                _ViewModel.Length = $("#txtAddLength").val();

                $.ajax({
                type: "POST",
                url: '@Url.Action("AddBoatHouseSize", "Boathouse")',
                        data: JSON.stringify(_ViewModel),
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function (xhr) {
                        xhr.setRequestHeader("RequestVerificationToken",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                dataType: "json",
                    success: function (data) {

                        var table = $('.dataTables-BoatHouseSizes').DataTable();

                        table.row.add([$("#txtAddCost").val(), $("#txtAddHieght").val(), $("#txtAddLength").val(), $("#txtAddWidth").val(),""]
                        ).draw();

                       //Display for the used indicating that the add was successfull.
                        toastr.success(data.message, 'Successfull.');

                        //Resets the text box to empty to allow a new item to be addedd.
                        IntiNewSize();
                        //hide the adding modal box.
                        $('#AddSizeModal').modal('hide');
                },
                error: function (xhr, textStatus, error) {

                    $('#AddSizeModal').modal('hide');
                        toastr.error(data.message, 'Error');
                    }
                });
        }
        $(document).ready(function () {

            $('.dataTables-BoatHouseSizes').DataTable({
                pageLength: 10
            });


            $("#txtAddCost").TouchSpin({
                min: 0,
                max: 100000,
                step: 0.1,
                decimals: 1,
                boostat: 5,
                maxboostedstep: 100,
                postfix: 'Rand'
            });
            $("#txtAddHieght").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 1,
                boostat: 5,
                maxboostedstep: 10,
                postfix: 'Meter'
            });
            $("#txtAddWidth").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 1,
                boostat: 5,
                maxboostedstep: 10,
                postfix: 'Meter'
            });
            $("#txtAddLength").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 1,
                boostat: 5,
                maxboostedstep: 10,
                postfix: 'Meter'
            });

        });


    </script>
}
